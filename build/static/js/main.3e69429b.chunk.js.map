{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","setNewFilter","onChange","e","target","value","PersonForm","submitPerson","setNewName","setNewNumber","newName","newNumber","onSubmit","type","Persons","person","removePerson","number","name","id","onClick","persons","filter","map","toLowerCase","includes","Person","Notification","message","messageClass","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","submitMessage","setSubmitMessage","setMessageClass","useEffect","personService","initialPerson","preventDefault","window","confirm","newObj","returnedPerson","setTimeout","catch","error","n","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAWeA,EATA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAEhB,OACE,qDACsB,uBAAOC,SAAU,SAACC,GAAD,OAAOF,EAAaE,EAAEC,OAAOC,cCezDC,EAnBI,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,aAAcC,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAErE,OACE,8BACI,uBAAMC,SAAUL,EAAhB,UACI,yCACM,uBAAOL,SAAU,SAACC,GAAD,OAAOK,EAAWL,EAAEC,OAAOC,QAAQA,MAAOK,OAEjE,2CACQ,uBAAOR,SAAU,SAACC,GAAD,OAAOM,EAAaN,EAAEC,OAAOC,QAAQA,MAAOM,OAErE,8BACA,wBAAQE,KAAK,SAAb,yBCFGC,EAVC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACfC,EAAqBF,EAArBE,OAAQC,EAAaH,EAAbG,KAAMC,EAAOJ,EAAPI,GACtB,OACI,gCACI,8BAAID,EAAJ,IAAWD,KACX,wBAAQG,QAASJ,EAAaG,GAA9B,wBCYGL,EAhBC,SAAC,GAAuC,IAArCO,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,OAAQN,EAAmB,EAAnBA,aAChC,OACI,8BAEQK,EAAQE,KAAI,SAAAR,GACR,OAAIA,EAAOG,KAAKM,cAAcC,SAASH,EAAOE,eACnC,cAACE,EAAD,CAA0BX,OAAQA,EAAQC,aAAcA,GAA3CD,EAAOG,MAEpB,WCGhBS,EAZM,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aAC5B,OAAgB,OAAZD,EACO,KAIP,qBAAKE,UAAWD,EAAe,QAAU,UAAzC,SACKD,K,gBCRPG,EAAU,yDAsBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB9B,EAfA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAACjB,EAAIkB,GAEhB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBZ,GAAMkB,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACjB,GAEZ,OADgBa,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BZ,IAC5Be,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCwE9BK,G,MApFH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACRrB,EADQ,KACCsB,EADD,OAEgBD,mBAAS,IAFzB,mBAERhC,EAFQ,KAECF,EAFD,OAGoBkC,mBAAS,IAH7B,mBAGR/B,EAHQ,KAGGF,EAHH,OAIiBiC,mBAAS,IAJ1B,mBAIRpB,EAJQ,KAIArB,EAJA,OAK4ByC,mBAAS,MALrC,mBAKRE,EALQ,KAKOC,EALP,OAM0BH,oBAAS,GANnC,mBAMRb,EANQ,KAMMiB,EANN,KAQhBC,qBAAU,WACRC,IAEGd,MAAK,SAAAe,GAAa,OAAIN,EAAWM,QACnC,IA2DH,OACE,gCACE,2CACA,cAAC,EAAD,CAAcrB,QAASgB,EAAef,aAAcA,IACpD,cAAC,EAAD,CAAQ5B,aAAcA,IACtB,2CACA,cAAC,EAAD,CAAYM,aA/DK,SAACJ,GACpBA,EAAE+C,iBACF,IAAMnC,EAASM,EAAQC,QAAO,SAAAP,GAAM,OAAIA,EAAOG,OAASR,KAAS,GACjE,GAAIK,GACF,GAAIoC,OAAOC,QAAP,UAAkB1C,EAAlB,2EAAoG,CACtG,IAAM2C,EAAM,2BAAQtC,GAAR,IAAgBE,OAAQN,IACpCqC,EACUjC,EAAOI,GAAIkC,GAClBnB,MAAK,SAAAoB,GACJX,EAAWtB,EAAQE,KAAI,SAAAR,GAAM,OAAIA,EAAOI,KAAOmC,EAAenC,GAAKJ,EAASuC,MAC5E9C,EAAW,IACXC,EAAa,IACbqC,GAAgB,GAChBD,EAAiB,WAAD,OACHS,EAAepC,KADZ,oBAGhBqC,YAAW,WACTV,EAAiB,QAChB,QAEJW,OAAM,SAAAC,GACLX,GAAgB,GAChBH,EAAWtB,EAAQC,QAAO,SAAAoC,GAAC,OAAIA,EAAExC,OAASH,EAAOG,SACjD2B,EAAiB,kBAAD,OACI9B,EAAOG,KADX,0CAGhBqC,YAAW,WACTV,EAAiB,QAChB,cAKTG,EADe,CAAE9B,KAAMR,EAASO,OAAQN,IAGrCuB,MAAK,SAAAoB,GACJX,EAAWtB,EAAQsC,OAAOL,IAC1B9C,EAAW,IACXC,EAAa,IACbqC,GAAgB,GAChBD,EAAiB,SAAD,OACLS,EAAepC,OAE1BqC,YAAW,WACTV,EAAiB,QAChB,SAkBiCrC,WAAYA,EAAYC,aAAcA,EAAcC,QAASA,EAASC,UAAWA,IACzH,yCACA,cAAC,EAAD,CAASU,QAASA,EAASC,OAAQA,EAAQN,aAf1B,SAAAG,GAAE,OAAI,SAAChB,GAC1BA,EAAE+C,iBACFF,EACU7B,GACPe,KAAKS,EAAWtB,EAAQC,QAAO,SAAAP,GAAM,OAAIA,EAAOI,KAAOA,gBCxE9DyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3e69429b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ setNewFilter }) => {\r\n\r\n  return (\r\n    <div>\r\n        filter shown with <input onChange={(e) => setNewFilter(e.target.value)} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({ submitPerson, setNewName, setNewNumber, newName, newNumber }) => {\r\n\r\n  return (\r\n    <div>\r\n        <form onSubmit={submitPerson} >\r\n            <div>\r\n            name: <input onChange={(e) => setNewName(e.target.value)} value={newName} />\r\n            </div>\r\n            <div>\r\n            number: <input onChange={(e) => setNewNumber(e.target.value)} value={newNumber} />\r\n            </div>\r\n            <div>\r\n            <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({ person, removePerson }) => {\r\n    const { number, name, id } = person\r\n    return (\r\n        <div>\r\n            <p>{name} {number}</p>\r\n            <button onClick={removePerson(id)}>delete</button>\r\n        </div>                      \r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ persons, filter, removePerson }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                persons.map(person => {\r\n                    if (person.name.toLowerCase().includes(filter.toLowerCase())) {\r\n                        return <Person key={person.name} person={person} removePerson={removePerson} />\r\n                    } else {\r\n                        return null\r\n                    }\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({message, messageClass}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={messageClass ? 'added' : 'deleted'}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = 'https://radiant-sierra-20753.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setNewFilter ] = useState('')\n  const [ submitMessage, setSubmitMessage ] = useState(null)\n  const [ messageClass, setMessageClass ] = useState(true)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPerson => setPersons(initialPerson))\n  }, [])\n\n  const submitPerson = (e) => {\n    e.preventDefault();\n    const person = persons.filter(person => person.name === newName)[0]\n    if (person) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const newObj = { ...person, number: newNumber }\n        personService\n          .update(person.id, newObj)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n            setNewName('');\n            setNewNumber('');\n            setMessageClass(true)\n            setSubmitMessage(\n              `Updated ${returnedPerson.name}'s phone number`\n            )\n            setTimeout(() => {\n              setSubmitMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setMessageClass(false)\n            setPersons(persons.filter(n => n.name !== person.name))\n            setSubmitMessage(\n              `Information of ${person.name} has already been removed from server`\n            )\n            setTimeout(() => {\n              setSubmitMessage(null)\n            }, 5000)\n          })\n      }\n    } else {\n      const newObj = { name: newName, number: newNumber };\n      personService\n        .create(newObj)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('');\n          setNewNumber('');\n          setMessageClass(true)\n          setSubmitMessage(\n            `Added ${returnedPerson.name}`\n          )\n          setTimeout(() => {\n            setSubmitMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const removePerson = id => (e) => {\n    e.preventDefault();\n    personService\n      .remove(id)\n      .then(setPersons(persons.filter(person => person.id !== id)))\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={submitMessage} messageClass={messageClass} />\n      <Filter setNewFilter={setNewFilter} />\n      <h3>Add a new</h3>\n      <PersonForm submitPerson={submitPerson} setNewName={setNewName} setNewNumber={setNewNumber} newName={newName} newNumber={newNumber} />\n      <h3>Numbers</h3>\n      <Persons persons={persons} filter={filter} removePerson={removePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}